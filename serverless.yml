# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: elsolra
# "service" is the name of this project. This will also be added to your AWS resource names.
service: Swing-notes-API

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  environment:
    JWT_SECRET: RE55
    NOTES: Notes-table
    USERS: Users-table
    # NODE_OPTIONS: --experimental-vm-modules
  httpApi:
    cors:
      # allowedOrigins:
      #   - https://url1.com   // this is for specific domain
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.NOTES}
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USERS}

package:
  individually: true

build:
  esbuild:
    bundle: true
    minify: true

functions:
  notesHandler:
    handler: src/handlers/notes.handler
    events:
      - httpApi:
          path: /api/notes
          method: GET
      - httpApi:
          path: /api/notes/{id}
          method: GET
      - httpApi:
          path: /api/notes
          method: POST
      - httpApi:
          path: /api/notes
          method: PUT
      - httpApi:
          path: /api/notes/{id}
          method: DELETE

  userHandler:
    handler: src/handlers/users.handler
    events:
      - httpApi:
          path: /api/user/signup
          method: POST
      - httpApi:
          path: /api/user/login
          method: POST

resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.NOTES}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
